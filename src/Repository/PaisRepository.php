<?php

namespace App\Repository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * PaisRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PaisRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Documentación para la función 'getPais'.
     *
     * Método encargado de retornar todos los paises según los parametros enviados.
     * 
     * @author Kevin Baque
     * @version 1.0 16-07-2019
     * 
     * @return array  $arrayPais
     * 
     */
    public function getPais($arrayParametros)
    {
        $strEstado       = $arrayParametros['estado'] ? $arrayParametros['estado']:array('ACTIVO','INACTIVO','ELIMINADO');
        $intIdPais       = $arrayParametros['idPais'] ? $arrayParametros['idPais']:'';
        $arrayPais       = array();
        $objRsmBuilder   = new ResultSetMappingBuilder($this->_em);
        $objQuery        = $this->_em->createNativeQuery(null, $objRsmBuilder);
        $strMensajeError = '';
        $strSelect       = '';
        $strFrom         = '';
        $strWhere        = '';
        $strOrder        = 'ORDER BY pais.PAIS_NOMBRE ASC';
        try
        {
            $strSelect = "SELECT pais.ID_PAIS,pais.PAIS_NOMBRE,pais.ESTADO ";
            $strFrom   = "FROM ADMI_PAIS pais ";
            $strWhere  = "WHERE pais.ESTADO in (:ESTADO) ";
            $objQuery->setParameter("ESTADO", $strEstado);
            if(!empty($intIdPais))
            {
                $strWhere  .= "AND pais.ID_PAIS in (:ID_PAIS) ";
                $objQuery->setParameter("ID_PAIS", $intIdPais);
            }
            $objRsmBuilder->addScalarResult('ID_PAIS', 'ID_PAIS', 'string');
            $objRsmBuilder->addScalarResult('PAIS_NOMBRE', 'PAIS_NOMBRE', 'string');
            $objRsmBuilder->addScalarResult('ESTADO', 'ESTADO', 'string');

            $strSql  = $strSelect.$strFrom.$strWhere.$strOrder;
            $objQuery->setSQL($strSql);
            $arrayPais['pais'] = $objQuery->getResult();
        }
        catch(\Exception $ex)
        {
            $strMensajeError = $ex->getMessage();
        }
        $arrayPais['error'] = $strMensajeError;
        return $arrayPais;
    }
}
