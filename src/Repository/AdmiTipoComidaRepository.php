<?php

namespace App\Repository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * AdmiTipoComidaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdmiTipoComidaRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Documentación para la función 'getTipoComida'.
     *
     * Método encargado de retornar todos los tipos de comida según los parametros enviados.
     * 
     * @author Kevin Baque
     * @version 1.0 17-08-2019
     * 
     * @return array  $arrayTipoComida
     * 
     */
    public function getTipoComida($arrayParametros)
    {
        $strEstado       = $arrayParametros['estado'] ? $arrayParametros['estado']:array('ACTIVO','INACTIVO','ELIMINADO');
        $intIdTipoComida = $arrayParametros['idTipoComida'] ? $arrayParametros['idTipoComida']:'';
        $arrayTipoComida = array();
        $objRsmBuilder   = new ResultSetMappingBuilder($this->_em);
        $objQuery        = $this->_em->createNativeQuery(null, $objRsmBuilder);
        $strMensajeError = '';
        $strSelect       = '';
        $strFrom         = '';
        $strWhere        = '';
        $strOrder        = 'ORDER BY tipoComida.DESCRIPCION_TIPO_COMIDA ASC';
        try
        {
            $strSelect = "SELECT tipoComida.ID_TIPO_COMIDA,tipoComida.DESCRIPCION_TIPO_COMIDA,tipoComida.ESTADO,
                          tipoComida.USR_CREACION,tipoComida.FE_CREACION ,tipoComida.USR_MODIFICACION ,tipoComida.FE_MODIFICACION ";
            $strFrom   = "FROM ADMI_TIPO_COMIDA tipoComida ";
            $strWhere  = "WHERE tipoComida.ESTADO in (:ESTADO) ";
            $objQuery->setParameter("ESTADO", $strEstado);
            if(!empty($intIdTipoComida))
            {
                $strWhere .= " AND tipoComida.ID_TIPO_COMIDA = :ID_TIPO_COMIDA ";
                $objQuery->setParameter("ID_TIPO_COMIDA", $intIdTipoComida);
            }
            $objRsmBuilder->addScalarResult('ID_TIPO_COMIDA', 'ID_TIPO_COMIDA', 'string');
            $objRsmBuilder->addScalarResult('DESCRIPCION_TIPO_COMIDA', 'DESCRIPCION_TIPO_COMIDA', 'string');
            $objRsmBuilder->addScalarResult('ESTADO', 'ESTADO', 'string');
            $objRsmBuilder->addScalarResult('USR_CREACION', 'USR_CREACION', 'string');
            $objRsmBuilder->addScalarResult('FE_CREACION', 'FE_CREACION', 'date');
            $objRsmBuilder->addScalarResult('USR_MODIFICACION', 'USR_MODIFICACION', 'string');
            $objRsmBuilder->addScalarResult('FE_MODIFICACION', 'FE_MODIFICACION', 'date');


            $strSql  = $strSelect.$strFrom.$strWhere.$strOrder;
            $objQuery->setSQL($strSql);
            $arrayTipoComida['tipoComida'] = $objQuery->getResult();
        }
        catch(\Exception $ex)
        {
            $strMensajeError = $ex->getMessage();
        }
        $arrayTipoComida['error'] = $strMensajeError;
        return $arrayTipoComida;
    }
}
