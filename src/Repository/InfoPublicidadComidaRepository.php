<?php

namespace App\Repository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
/**
 * InfoPublicidadComidaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InfoPublicidadComidaRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Documentación para la función 'getRelacionPubComCriterio'
     * Método encargado de retornar las relaciones entre tipo de comida y publicidad 
     * según los parámetros recibidos.
     * 
     * @author Kevin Baque
     * @version 1.0 15-09-2019
     * 
     * @return array  $arrayPubliComida
     * 
     */    
    public function getRelacionPubComCriterio($arrayParametros)
    {
        $intIdPubComida     = $arrayParametros['intIdPubComida'] ? $arrayParametros['intIdPubComida']:'';
        $intIdTipoComida    = $arrayParametros['intIdTipoComida'] ? $arrayParametros['intIdTipoComida']:'';
        $intIdPublicidad    = $arrayParametros['intIdPublicidad'] ? $arrayParametros['intIdPublicidad']:'';
        $strEstado          = $arrayParametros['strEstado'] ? $arrayParametros['strEstado']:array('ACTIVO','INACTIVO','ELIMINADO');
        $arrayPubliComida   = array();
        $strMensajeError    = '';
        $objRsmBuilder      = new ResultSetMappingBuilder($this->_em);
        $objQuery           = $this->_em->createNativeQuery(null, $objRsmBuilder);
        $objRsmBuilderCount = new ResultSetMappingBuilder($this->_em);
        $objQueryCount      = $this->_em->createNativeQuery(null, $objRsmBuilderCount);
        try
        {
            $strSelect      = "SELECT IPC.ID_PUBLICIDAD_COMIDA,IPC.ESTADO,IPC.USR_CREACION,IPC.FE_CREACION,IPC.USR_MODIFICACION,IPC.FE_MODIFICACION ,
                                IPU.ID_PUBLICIDAD,IPU.DESCRIPCION,IPU.ESTADO AS ESTADO_PUBLICIDAD,
                                ATC.ID_TIPO_COMIDA,ATC.DESCRIPCION_TIPO_COMIDA,ATC.ESTADO AS ESTADO_TIPO_COMIDA ";
            $strSelectCount = "SELECT COUNT(*) AS CANTIDAD ";
            $strFrom        = "FROM INFO_PUBLICIDAD_COMIDA IPC
                                JOIN INFO_PUBLICIDAD IPU ON IPU.ID_PUBLICIDAD=IPC.PUBLICIDAD_ID
                                JOIN ADMI_TIPO_COMIDA ATC ON ATC.ID_TIPO_COMIDA=IPC.TIPO_COMIDA_ID ";
            $strWhere       = "WHERE IPC.ESTADO in (:ESTADO) ";
            $objQuery->setParameter("ESTADO",$strEstado);
            $objQueryCount->setParameter("ESTADO",$strEstado);
            if(!empty($intIdPubComida))
            {
                $strWhere .= " AND IPC.ID_PUBLICIDAD_COMIDA =:ID_PUBLICIDAD_COMIDA";
                $objQuery->setParameter("ID_PUBLICIDAD_COMIDA", $intIdPubComida);
                $objQueryCount->setParameter("ID_PUBLICIDAD_COMIDA", $intIdPubComida);
            }
            if(!empty($intIdTipoComida))
            {
                $strWhere .= " AND ATC.ID_TIPO_COMIDA =:ID_TIPO_COMIDA";
                $objQuery->setParameter("ID_TIPO_COMIDA", $intIdTipoComida);
                $objQueryCount->setParameter("ID_TIPO_COMIDA", $intIdTipoComida);
            }
            if(!empty($intIdPublicidad))
            {
                $strWhere .= " AND IPU.ID_PUBLICIDAD =:ID_PUBLICIDAD";
                $objQuery->setParameter("ID_PUBLICIDAD", $intIdPublicidad);
                $objQueryCount->setParameter("ID_PUBLICIDAD", $intIdPublicidad);
            }

            $objRsmBuilder->addScalarResult('ID_PUBLICIDAD_COMIDA', 'ID_PUBLICIDAD_COMIDA', 'string');
            $objRsmBuilder->addScalarResult('ESTADO', 'ESTADO', 'string');
            $objRsmBuilder->addScalarResult('USR_CREACION', 'USR_CREACION', 'string');
            $objRsmBuilder->addScalarResult('FE_CREACION', 'FE_CREACION', 'date');
            $objRsmBuilder->addScalarResult('USR_MODIFICACION', 'USR_MODIFICACION', 'string');
            $objRsmBuilder->addScalarResult('FE_MODIFICACION', 'FE_MODIFICACION', 'date');
            $objRsmBuilder->addScalarResult('ID_PUBLICIDAD', 'ID_PUBLICIDAD', 'string');
            $objRsmBuilder->addScalarResult('DESCRIPCION', 'DESCRIPCION', 'string');
            $objRsmBuilder->addScalarResult('ESTADO_PUBLICIDAD', 'ESTADO_PUBLICIDAD', 'string');
            $objRsmBuilder->addScalarResult('ID_TIPO_COMIDA', 'ID_TIPO_COMIDA', 'string');
            $objRsmBuilder->addScalarResult('DESCRIPCION_TIPO_COMIDA', 'DESCRIPCION_TIPO_COMIDA', 'string');
            $objRsmBuilder->addScalarResult('ESTADO_TIPO_COMIDA', 'ESTADO_TIPO_COMIDA', 'string');

            $objRsmBuilderCount->addScalarResult('CANTIDAD', 'Cantidad', 'integer');
            $strSql       = $strSelect.$strFrom.$strWhere;
            $objQuery->setSQL($strSql);
            $strSqlCount  = $strSelectCount.$strFrom.$strWhere;
            $objQueryCount->setSQL($strSqlCount);
            $arrayPubliComida['cantidad']   = $objQueryCount->getSingleScalarResult();
            $arrayPubliComida['resultados'] = $objQuery->getResult();
        }
        catch(\Exception $ex)
        {
            $strMensajeError = $ex->getMessage();
        }
        $arrayPubliComida['error'] = $strMensajeError;
        return $arrayPubliComida;
    }
}
