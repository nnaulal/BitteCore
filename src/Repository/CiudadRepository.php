<?php

namespace App\Repository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * CiudadRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CiudadRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Documentación para la función 'getCiudad'.
     * Método encargado de retornar todos los paises según los parámetros enviados.
     * 
     * @author Kevin Baque
     * @version 1.0 16-07-2019
     * 
     * @return array  $arrayCiudad
     * 
     */
    public function getCiudad($arrayParametros)
    {
        $strEstado       = $arrayParametros['estado'] ? $arrayParametros['estado']:array('ACTIVO','INACTIVO','ELIMINADO');
        $strProvincia    = $arrayParametros['idProvincia'] ? $arrayParametros['idProvincia']:'';
        $intCiudad       = $arrayParametros['idCiudad'] ? $arrayParametros['idCiudad']:'';
        $arrayCiudad     = array();
        $objRsmBuilder   = new ResultSetMappingBuilder($this->_em);
        $objQuery        = $this->_em->createNativeQuery(null, $objRsmBuilder);
        $strMensajeError = '';
        $strSelect       = '';
        $strFrom         = '';
        $strWhere        = '';
        $strOrder        = 'ORDER BY ciudad.CIUDAD_NOMBRE ASC';
        try
        {
            $strSelect = "SELECT ciudad.ID_CIUDAD,ciudad.PROVINCIA_ID,ciudad.CIUDAD_NOMBRE,ciudad.ESTADO ";
            $strFrom   = "FROM ADMI_CIUDAD ciudad ";
            $strWhere  = "WHERE ciudad.ESTADO in (:ESTADO) ";
            $objQuery->setParameter("ESTADO", $strEstado);
            if(!empty($intCiudad))
            {
                $strWhere .= " AND ciudad.ID_CIUDAD = :ID_CIUDAD ";
                $objQuery->setParameter("ID_CIUDAD", $intCiudad);
            }
            if(!empty($strProvincia))
            {
                $strFrom  .= " , ADMI_PROVINCIA provincia ";
                $strWhere .= " AND provincia.ID_PROVINCIA = ciudad.PROVINCIA_ID AND provincia.ID_PROVINCIA = :ID_PROVINCIA ";
                $objQuery->setParameter("ID_PROVINCIA", $strProvincia);
            }
            $objRsmBuilder->addScalarResult('ID_CIUDAD', 'ID_CIUDAD', 'string');
            $objRsmBuilder->addScalarResult('PROVINCIA_ID', 'PROVINCIA_ID', 'string');
            $objRsmBuilder->addScalarResult('CIUDAD_NOMBRE', 'CIUDAD_NOMBRE', 'string');
            $objRsmBuilder->addScalarResult('ESTADO', 'ESTADO', 'string');

            $strSql  = $strSelect.$strFrom.$strWhere.$strOrder;
            $objQuery->setSQL($strSql);
            $arrayCiudad['ciudad'] = $objQuery->getResult();
        }
        catch(\Exception $ex)
        {
            $strMensajeError = $ex->getMessage();
        }
        $arrayCiudad['error'] = $strMensajeError;
        return $arrayCiudad;
    }
}
