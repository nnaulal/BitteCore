<?php

namespace App\Repository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
/**
 * InfoClienteInfluencerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InfoClienteInfluencerRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Documentación para la función 'getCltInfluencerCriterio'
     * Método encargado de retornar todos los Clt InfluencerCriterio según los parámetros recibidos.
     * 
     * @author Kevin Baque
     * @version 1.0 26-08-2019
     * 
     * @return array  $arrayCltInfluencer
     * 
     */
    public function getCltInfluencerCriterio($arrayParametros)
    {
        $intIdCliente       = $arrayParametros['intIdCliente'] ? $arrayParametros['intIdCliente']:'';
        $intIdCltInfluencer = $arrayParametros['intIdCltInfluencer'] ? $arrayParametros['intIdCltInfluencer']:'';
        $strContador        = $arrayParametros['strContador'] ? $arrayParametros['strContador']:'NO';
        $strEstado          = $arrayParametros['strEstado'] ? $arrayParametros['strEstado']:array('ACTIVO','INACTIVO','ELIMINADO');
        $arrayCltInfluencer = array();
        $strMensajeError    = '';
        $objRsmBuilder      = new ResultSetMappingBuilder($this->_em);
        $objQuery           = $this->_em->createNativeQuery(null, $objRsmBuilder);
        $objRsmBuilderCount = new ResultSetMappingBuilder($this->_em);
        $objQueryCount      = $this->_em->createNativeQuery(null, $objRsmBuilderCount);
        $strOrder           = ' ORDER BY IC.NOMBRE ASC';
        try
        {
            if(!empty($strContador) && $strContador == 'SI')
            {
                $strSelectCount = "SELECT COUNT(*) AS CANTIDAD ";
                $strFromCount   = "FROM INFO_CLIENTE IC 
                                    JOIN INFO_CLIENTE_INFLUENCER ICF ON IC.ID_CLIENTE = ICF.CLIENTE_ID ";
                $strWhereCount  = "WHERE ICF.ESTADO in (:ESTADO) ";
                $objQueryCount->setParameter("ESTADO", $strEstado);
                $objRsmBuilderCount->addScalarResult('CANTIDAD', 'Cantidad', 'integer');

                $strSqlCount  = $strSelectCount.$strFromCount.$strWhereCount;
                $objQueryCount->setSQL($strSqlCount);
                $arrayCltInfluencer['cantidad']   = $objQueryCount->getSingleScalarResult();
            }
            else
            {
                $strSelect      = "SELECT IC.ID_CLIENTE,IC.USUARIO_ID,IC.TIPO_CLIENTE_PUNTAJE_ID, IC.IDENTIFICACION, IC.NOMBRE,IC.APELLIDO,
                                IC.CORREO,IC.DIRECCION,IC.EDAD,IC.TIPO_COMIDA,IC.GENERO,IC.ESTADO AS ESTADO_CLT,
                                ICF.USR_CREACION,ICF.FE_CREACION,ICF.USR_MODIFICACION,ICF.FE_MODIFICACION,
                                ICF.ID_CLIENTE_INFLUENCER, ICF.IMAGEN, ICF.ESTADO AS ESTADO_CLT_INFLUENCER ";
                $strFrom        = "FROM INFO_CLIENTE IC 
                                   JOIN INFO_CLIENTE_INFLUENCER ICF ON IC.ID_CLIENTE = ICF.CLIENTE_ID ";
                $strWhere       = "WHERE ICF.ESTADO in (:ESTADO) ";
                $objQuery->setParameter("ESTADO",$strEstado);
                if(!empty($intIdCliente))
                {
                    $strWhere .= " AND IC.ID_CLIENTE =:intIdCliente";
                    $objQuery->setParameter("intIdCliente", $intIdCliente);
                }
                if(!empty($intIdCltInfluencer))
                {
                    $strWhere .= " AND ICF.ID_CLIENTE_INFLUENCER =:ID_CLIENTE_INFLUENCER";
                    $objQuery->setParameter("ID_CLIENTE_INFLUENCER", $intIdCltInfluencer);
                }
                $objRsmBuilder->addScalarResult('ID_CLIENTE_INFLUENCER', 'ID_CLIENTE_INFLUENCER', 'string');
                $objRsmBuilder->addScalarResult('IMAGEN', 'IMAGEN', 'string');
                $objRsmBuilder->addScalarResult('ID_CLIENTE', 'ID_CLIENTE', 'string');
                $objRsmBuilder->addScalarResult('USUARIO_ID', 'USUARIO_ID', 'string');
                $objRsmBuilder->addScalarResult('TIPO_CLIENTE_PUNTAJE_ID', 'TIPO_CLIENTE_PUNTAJE_ID', 'string');
                $objRsmBuilder->addScalarResult('IDENTIFICACION', 'IDENTIFICACION', 'string');
                $objRsmBuilder->addScalarResult('NOMBRE', 'NOMBRE', 'string');
                $objRsmBuilder->addScalarResult('APELLIDO', 'APELLIDO', 'string');
                $objRsmBuilder->addScalarResult('CORREO', 'CORREO', 'string');
                $objRsmBuilder->addScalarResult('DIRECCION', 'DIRECCION', 'string');
                $objRsmBuilder->addScalarResult('EDAD', 'EDAD', 'string');
                $objRsmBuilder->addScalarResult('TIPO_COMIDA', 'TIPO_COMIDA', 'string');
                $objRsmBuilder->addScalarResult('GENERO', 'GENERO', 'string');
                $objRsmBuilder->addScalarResult('ESTADO_CLT', 'ESTADO_CLT', 'string');
                $objRsmBuilder->addScalarResult('ESTADO_CLT_INFLUENCER', 'ESTADO_CLT_INFLUENCER', 'string');
                $objRsmBuilder->addScalarResult('USR_CREACION', 'USR_CREACION', 'string');
                $objRsmBuilder->addScalarResult('FE_CREACION', 'FE_CREACION', 'date');
                $objRsmBuilder->addScalarResult('USR_MODIFICACION', 'USR_MODIFICACION', 'string');
                $objRsmBuilder->addScalarResult('FE_MODIFICACION', 'FE_MODIFICACION', 'date');
                $strSql       = $strSelect.$strFrom.$strWhere.$strOrder;
                $objQuery->setSQL($strSql);
                $arrayCltInfluencer['resultados'] = $objQuery->getResult();
            }
        }
        catch(\Exception $ex)
        {
            $strMensajeError = $ex->getMessage();
        }
        $arrayCltInfluencer['error'] = $strMensajeError;
        return $arrayCltInfluencer;
    }
}
